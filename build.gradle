import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: 'maven-publish'

// version = "1.0.0"
// 版本号，正式发布需要修改这一行
version = new SimpleDateFormat("MMdd-HHmmss").format(new Date())
group = "com.tac"
archivesBaseName = "tac-1.18.2"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "tac.refmap.json"
    config "tac.mixins.json"
}

minecraft {
    // 使用 parchment 来反混淆变量名
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'
    // 使用 access transformer 来修改原版的一些方法访问修饰符
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // 运行参数
    runs {
        client {
            // 使用 JetBrainsRuntime 时需要的参数，否则无法热重载
            // 如果你使用别的 JDK，那么可以删除这一行
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
            // 每个启动单独区分文件夹
            workingDirectory project.file('run/client_a')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                tac {
                    source sourceSets.main
                }
            }
        }

        client2 {
            parent minecraft.runs.client
            workingDirectory project.file('run/client_b')
            // 设定用户名
            args '--username', 'mayday_memory'
            mods {
                tac {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                tac {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'tac', '--all', '--output', file('src/generated/resources/')
            mods {
                tac {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // 阿里云镜像，方便国内开发
        url = uri("https://maven.aliyun.com/repository/public/")
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 Maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "Mod Maven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        // cloth config api
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}")

    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_forge}")
    implementation fg.deobf("org.embeddedt:embeddium-1.18.2:${embeddedt_id}")
    implementation fg.deobf("curse.maven:oculus-581495:${oculus_id}")

    runtimeOnly fg.deobf("curse.maven:customskinloader-286924:${csl_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Implementation-Title"  : project.name,
                "Implementation-Version": project.version
        ])
    }
}

java {
    // 编译源码文件，方便发布 maven
    withSourcesJar()
}

publishing {
    // 发布到 jitpack maven，方便其他模组开发者
    publications.create('mavenJava', MavenPublication) {
        from components.java
        groupId = project.group
        version = project.version
        artifactId = project.archivesBaseName
        pom {
            name = project.archivesBaseName
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}